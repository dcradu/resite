# Spatial resolution (in degrees) of the potential sites.
spatial_resolution: 0.5

# Path towards the various input data.
path_resource_data: '../input_data/resource_data'
path_transfer_function_data: '../input_data/transfer_functions'
path_population_density_data: '../input_data/population_density'
path_protected_areas_data: '../input_data/protected_areas'
path_land_data: '../input_data/land_data'
path_load_data: '../input_data/load_data'
path_transmission_data: '../input_data/transmission_data'
path_potential_data: '../input_data/potentials'
path_legacy_data : '../input_data/legacy'
path_shapefile_data: '../input_data/shapefiles'

# Various data layers to be taken into account in potential site selection.
resource_quality_layer: True
population_density_layer: False
protected_areas_layer: False
bathymetry_layer: True
orography_layer: False
forestry_layer: False
water_mask_layer: False
latitude_layer: True
legacy_layer: False
distance_layer: True

# Start time and end time of the analysis.
time_slice: ['2016-01-01T00:00', '2018-12-31T23:00']
# List of regions to be considered in the optimization. To note that a list of pre-defined regions is available
# in tools.py, within the `return_coordinates_from_countries` function. Yet, if additional regions are defined,
# an associated load signal should be assigned in the `read_load_data` function.
regions: ['DE', 'FR', 'ES', 'UK', 'IT', 'SE', 'PL', 'NL', 'PT', 'AT', 'EL', 'IE', 'DK', 'FI',
          'RO', 'BE', 'BG', 'LT', 'CZ', 'EE', 'LV', 'HR', 'NO']
#regions: ['EU']
# Technologies to deploy.
technologies: ['wind_offshore']


# Assessment measure for each time window. Available: mean, median or percentiles.
smooth_measure: 'mean'
# Defines how \alpha is considered in space and time.
alpha: 'load_central'
# Normalization procedures (detailed in tools.py). (min, max)
norm_type: 'min'
# Time-window length used to compute the criticality indicator. Integer value.
delta: 1
# Geographical coverage threshold used to compute the criticality indicator. Float value between 0.0 and 1.0
c: [8, 16, 24, 32, 40, 48, 62]
#c: [20, 40, 60, 80, 100, 120, 171]
#c: [40, 80, 120, 160, 200, 240, 330]

# Choice of solver. Available: 'gurobi' and 'cplex'.
solver: 'gurobi'
# MIP gap --- 0.01 = 1%
mipgap: 0.05
timelimit: 1800
threads: 0

# Heuristics parameters
neighborhood: 1
no_iterations: 150
no_epochs: 500
initial_temp: 200.
no_runs: 20
algorithm: 'SALS' #'GLS'

# Solution method: BB or HEU.
solution_method: 'HEU'

# Dict of deployments per partition (ordered as the 'regions' list above)

#deployment_vector: {'EU':{'wind_offshore':62}}

deployment_vector: {'UK':{'wind_offshore':10},
                    'NL':{'wind_offshore':7},
                    'FR':{'wind_offshore':7},
                    'DE':{'wind_offshore':5},
                    'DK':{'wind_offshore':4},
                    'NO':{'wind_offshore':4},
                    'PL':{'wind_offshore':4},
                    'IE':{'wind_offshore':3},
                    'IT':{'wind_offshore':3},
                    'SE':{'wind_offshore':3},
                    'FI':{'wind_offshore':2},
                    'ES':{'wind_offshore':2},
                    'EL':{'wind_offshore':2},
                    'PT':{'wind_offshore':2},
                    'BE':{'wind_offshore':1},
                    'LT':{'wind_offshore':1},
                    'LV':{'wind_offshore':1},
                    'EE':{'wind_offshore':1}}

#deployment_vector: {'UK':{'wind_offshore':29},
#                    'NL':{'wind_offshore':22},
#                    'FR':{'wind_offshore':21},
#                    'DE':{'wind_offshore':13},
#                    'DK':{'wind_offshore':13},
#                    'NO':{'wind_offshore':11},
#                    'PL':{'wind_offshore':11},
#                    'IE':{'wind_offshore':8},
#                    'IT':{'wind_offshore':8},
#                    'SE':{'wind_offshore':8},
#                    'FI':{'wind_offshore':6},
#                    'ES':{'wind_offshore':5},
#                    'EL':{'wind_offshore':4},
#                    'PT':{'wind_offshore':4},
#                    'BE':{'wind_offshore':3},
#                    'LT':{'wind_offshore':2},
#                    'LV':{'wind_offshore':2},
#                    'EE':{'wind_offshore':1}}

#deployment_vector: {'UK':{'wind_offshore':58},
#                    'NL':{'wind_offshore':44},
#                    'FR':{'wind_offshore':41},
#                    'DE':{'wind_offshore':26},
#                    'DK':{'wind_offshore':26},
#                    'NO':{'wind_offshore':22},
#                    'PL':{'wind_offshore':21},
#                    'IE':{'wind_offshore':16},
#                    'IT':{'wind_offshore':15},
#                    'SE':{'wind_offshore':15},
#                    'FI':{'wind_offshore':11},
#                    'ES':{'wind_offshore':10},
#                    'EL':{'wind_offshore':8},
#                    'PT':{'wind_offshore':7},
#                    'BE':{'wind_offshore':3},
#                    'LT':{'wind_offshore':3},
#                    'LV':{'wind_offshore':3},
#                    'EE':{'wind_offshore':1}}

# Keeping files at the end of the run.
keep_files: True
# Run name
name_prefix: 'off_'